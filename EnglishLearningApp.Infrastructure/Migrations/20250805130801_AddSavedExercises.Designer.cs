// <auto-generated />
using System;
using EnglishLearningApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnglishLearningApp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250805130801_AddSavedExercises")]
    partial class AddSavedExercises
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EnglishLearningApp.Domain.Entities.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CorrectAnswer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("Options")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CorrectAnswer = "me",
                            Explanation = "Use 'me' as the object of the verb 'wanted'.",
                            LessonId = 1,
                            Options = "[\"me\",\"I\",\"Either could be used here\"]",
                            Order = 1,
                            Question = "My mother wanted ............................ to become a doctor."
                        },
                        new
                        {
                            Id = 2,
                            CorrectAnswer = "She",
                            Explanation = "Use 'She' as the subject of the sentence.",
                            LessonId = 1,
                            Options = "[\"She\",\"Her\",\"Hers\"]",
                            Order = 2,
                            Question = "............................ is going to the store."
                        },
                        new
                        {
                            Id = 3,
                            CorrectAnswer = "him",
                            Explanation = "Use 'him' as the object of the preposition 'to'.",
                            LessonId = 1,
                            Options = "[\"he\",\"him\",\"his\"]",
                            Order = 3,
                            Question = "The book belongs to ............................ ."
                        },
                        new
                        {
                            Id = 4,
                            CorrectAnswer = "They",
                            Explanation = "Use 'They' as the subject of the sentence.",
                            LessonId = 1,
                            Options = "[\"Them\",\"They\",\"Their\"]",
                            Order = 4,
                            Question = "............................ are going to the party."
                        },
                        new
                        {
                            Id = 5,
                            CorrectAnswer = "my",
                            Explanation = "Use 'my' as a possessive adjective before the noun 'car'.",
                            LessonId = 1,
                            Options = "[\"me\",\"my\",\"mine\"]",
                            Order = 5,
                            Question = "This is ............................ car."
                        },
                        new
                        {
                            Id = 6,
                            CorrectAnswer = "went",
                            Explanation = "Use past simple tense for completed actions in the past.",
                            LessonId = 2,
                            Options = "[\"go\",\"went\",\"gone\",\"going\"]",
                            Order = 1,
                            Question = "I ............................ to the store yesterday."
                        },
                        new
                        {
                            Id = 7,
                            CorrectAnswer = "has been studying",
                            Explanation = "Use present perfect continuous for actions that started in the past and continue to the present.",
                            LessonId = 2,
                            Options = "[\"studies\",\"studied\",\"has been studying\",\"will study\"]",
                            Order = 2,
                            Question = "She ............................ English for five years."
                        },
                        new
                        {
                            Id = 8,
                            CorrectAnswer = "were having",
                            Explanation = "Use past continuous for actions in progress at a specific time in the past.",
                            LessonId = 2,
                            Options = "[\"have\",\"had\",\"were having\",\"will have\"]",
                            Order = 3,
                            Question = "They ............................ dinner when I called."
                        },
                        new
                        {
                            Id = 9,
                            CorrectAnswer = "will go",
                            Explanation = "Use future simple for planned future actions.",
                            LessonId = 2,
                            Options = "[\"go\",\"went\",\"will go\",\"am going\"]",
                            Order = 4,
                            Question = "I ............................ to Paris next summer."
                        },
                        new
                        {
                            Id = 10,
                            CorrectAnswer = "has lived",
                            Explanation = "Use present perfect for actions that started in the past and continue to the present.",
                            LessonId = 2,
                            Options = "[\"lives\",\"lived\",\"has lived\",\"will live\"]",
                            Order = 5,
                            Question = "He ............................ in London since 2010."
                        },
                        new
                        {
                            Id = 11,
                            CorrectAnswer = "an",
                            Explanation = "Use 'an' before words that begin with a vowel sound.",
                            LessonId = 3,
                            Options = "[\"a\",\"an\",\"the\",\"no article\"]",
                            Order = 1,
                            Question = "I saw ............................ elephant at the zoo."
                        },
                        new
                        {
                            Id = 12,
                            CorrectAnswer = "The",
                            Explanation = "Use 'the' for unique objects or specific things.",
                            LessonId = 3,
                            Options = "[\"A\",\"An\",\"The\",\"No article\"]",
                            Order = 2,
                            Question = "............................ sun rises in the east."
                        },
                        new
                        {
                            Id = 13,
                            CorrectAnswer = "a",
                            Explanation = "Use 'a' before words that begin with a consonant sound.",
                            LessonId = 3,
                            Options = "[\"a\",\"an\",\"the\",\"no article\"]",
                            Order = 3,
                            Question = "She bought ............................ car last week."
                        },
                        new
                        {
                            Id = 14,
                            CorrectAnswer = "The",
                            Explanation = "Use 'the' with country names that contain words like 'United', 'Kingdom', 'Republic'.",
                            LessonId = 3,
                            Options = "[\"A\",\"An\",\"The\",\"No article\"]",
                            Order = 4,
                            Question = "............................ United States is a large country."
                        },
                        new
                        {
                            Id = 15,
                            CorrectAnswer = "an",
                            Explanation = "Use 'an' before words that begin with a vowel sound.",
                            LessonId = 3,
                            Options = "[\"a\",\"an\",\"the\",\"no article\"]",
                            Order = 5,
                            Question = "I need ............................ umbrella because it's raining."
                        });
                });

            modelBuilder.Entity("EnglishLearningApp.Domain.Entities.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("TaskType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 5, 13, 8, 1, 129, DateTimeKind.Utc).AddTicks(6976),
                            Description = "Learn and practice using different types of pronouns in English sentences.",
                            Difficulty = 1,
                            IsActive = true,
                            TaskType = "Fill in the blanks with an appropriate pronoun.",
                            Theme = "Pronouns",
                            Title = "Pronouns Exercise"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 8, 5, 13, 8, 1, 129, DateTimeKind.Utc).AddTicks(6978),
                            Description = "Practice using different verb tenses in English.",
                            Difficulty = 2,
                            IsActive = true,
                            TaskType = "Choose the correct verb form for each sentence.",
                            Theme = "Grammar",
                            Title = "Verb Tenses"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 8, 5, 13, 8, 1, 129, DateTimeKind.Utc).AddTicks(6980),
                            Description = "Learn when to use 'a', 'an', and 'the' in English sentences.",
                            Difficulty = 1,
                            IsActive = true,
                            TaskType = "Fill in the blanks with the correct article.",
                            Theme = "Articles",
                            Title = "Articles Exercise"
                        });
                });

            modelBuilder.Entity("EnglishLearningApp.Domain.Entities.SavedExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<string>("GeneratedRule")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<double?>("Percentage")
                        .HasColumnType("float");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.Property<string>("TaskType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TotalQuestions")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("SavedExercises");
                });

            modelBuilder.Entity("EnglishLearningApp.Domain.Entities.SavedExerciseQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CorrectAnswer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<string>("OptionsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SavedExerciseId")
                        .HasColumnType("int");

                    b.Property<string>("UserAnswer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("SavedExerciseId");

                    b.ToTable("SavedExerciseQuestions");
                });

            modelBuilder.Entity("EnglishLearningApp.Domain.Entities.UserProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("TotalQuestions")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("UserProgress");
                });

            modelBuilder.Entity("EnglishLearningApp.Domain.Entities.Exercise", b =>
                {
                    b.HasOne("EnglishLearningApp.Domain.Entities.Lesson", "Lesson")
                        .WithMany("Exercises")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("EnglishLearningApp.Domain.Entities.SavedExerciseQuestion", b =>
                {
                    b.HasOne("EnglishLearningApp.Domain.Entities.SavedExercise", "SavedExercise")
                        .WithMany("Questions")
                        .HasForeignKey("SavedExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SavedExercise");
                });

            modelBuilder.Entity("EnglishLearningApp.Domain.Entities.UserProgress", b =>
                {
                    b.HasOne("EnglishLearningApp.Domain.Entities.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("EnglishLearningApp.Domain.Entities.Lesson", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("EnglishLearningApp.Domain.Entities.SavedExercise", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
